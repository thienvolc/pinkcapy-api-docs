paths:
  /manage/orders:
    get:
      summary: Search user orders for admin
      description: Retrieve a list of the user's past orders.
      tags: [Order_Admin]
      security:
        - bearerAuth: []
      parameters:
        - $ref: '../components/schemas/core/parameters.yaml#/components/parameters/AuthorizationHeader'
        - name: page
          in: query
          required: true
          description: Page number to retrieve
          default: 1
          schema:
            type: integer
            example: 1
        - name: size
          in: query
          required: true
          description: Number of results per page
          default: 10
          schema:
            type: integer
            example: 10
        - name: sort
          in: query
          required: false
          description: Sort order
          schema:
            type: string
            format: '<sort_field>:<order>'
            example: 'created_at:desc'
        - name: query
          in: query
          description: Search keyword
          schema:
            type: string
            example: 'tai nghe'
        - name: status
          in: query
          optional: true
          description: Filter orders by their status
          schema:
            type: integer
            enum: [1, 2, 3, 4, 5, 6, 7, 8]
          example: 3
        - name: user_id
          in: query
          description: Filter orders by user ID
          schema:
            type: integer
          example: 1
        - name: start
          in: query
          description: Order start date (upper bound)
          schema:
            type: string
            format: date
            example: '2025-01-01'
        - name: end
          in: query
          description: Order end date (lower bound)
          schema:
            type: string
            format: date
            example: '2025-12-01'
        - name: min
          in: query
          description: Order minimum price
          schema:
            type: number
            format: float
            example: 100.0
        - name: max
          in: query
          description: Order maximum price
          schema:
            type: number
            format: float
            example: 200.0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '../components/schemas/core/response.yaml'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '../components/schemas/core/pagination_response.yaml'
                          - type: object
                            properties:
                              data:
                                items:
                                  $ref: '../components/schemas/order/order_history.yaml'
        '400':
          $ref: '../components/responses/error.yaml#/BadRequest'
        '403':
          $ref: '../components/responses/error.yaml#/Forbidden'

  /manage/orders/{id}/confirm:
    post:
      summary: Confirm a new order
      description: Confirm a new order.
      tags: [Order_Admin]
      security:
        - bearerAuth: []
      parameters:
        - $ref: '../components/schemas/core/parameters.yaml#/components/parameters/AuthorizationHeader'
        - $ref: '../components/schemas/core/parameters.yaml#/components/parameters/IdempotencyKeyHeader'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '../components/schemas/core/response.yaml'
                  - type: object
                    properties:
                      - $ref: '../components/schemas/order/order_status.yaml'
        '400':
          $ref: '../components/responses/error.yaml#/BadRequest'
        '403':
          $ref: '../components/responses/error.yaml#/Forbidden'

  /manage/orders/{id}:
    get:
      summary: Get order details
      description: Retrieve the details of a specific order.
      tags: [Order_Admin]
      security:
        - bearerAuth: []
      parameters:
        - $ref: '../components/schemas/core/parameters.yaml#/components/parameters/AuthorizationHeader'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '../components/schemas/core/response.yaml'
                  - type: object
                    properties:
                      data:
                        $ref: '../components/schemas/order/order_admin.yaml'
        '400':
          $ref: '../components/responses/error.yaml#/BadRequest'
        '404':
          $ref: '../components/responses/error.yaml#/NotFound'
        '403':
          $ref: '../components/responses/error.yaml#/Forbidden'

  /manage/orders/{id}/status:
    get:
      summary: Get the status of a specific order
      description: Retrieve the current status of a specific order.
      tags: [Order_Admin]
      security:
        - bearerAuth: []
      parameters:
        - $ref: '../components/schemas/core/parameters.yaml#/components/parameters/AuthorizationHeader'
        - name: id
          in: path
          required: true
          description: ID of the order to retrieve status for
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '../components/schemas/core/response.yaml'
                  - type: object
                    properties:
                      data:
                        $ref: '../components/schemas/order/order_status.yaml'
        '400':
          $ref: '../components/responses/error.yaml#/BadRequest'
        '404':
          $ref: '../components/responses/error.yaml#/NotFound'
        '403':
          $ref: '../components/responses/error.yaml#/Forbidden'

    put:
      summary: Update the status of a specific order
      description: Update the current status of a specific order.
      tags: [Order_Admin]
      security:
        - bearerAuth: []
      parameters:
        - $ref: '../components/schemas/core/parameters.yaml#/components/parameters/AuthorizationHeader'
        - $ref: '../components/schemas/core/parameters.yaml#/components/parameters/IdempotencyKeyHeader'
        - name: id
          in: path
          required: true
          description: ID of the order
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../components/schemas/order/order_status.yaml'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '../components/schemas/core/response.yaml'
                  - type: object
                    properties:
                      data:
                        $ref: '../components/schemas/order/order_status.yaml'
        '400':
          $ref: '../components/responses/error.yaml#/BadRequest'
        '404':
          $ref: '../components/responses/error.yaml#/NotFound'
        '403':
          $ref: '../components/responses/error.yaml#/Forbidden'

  /manage/orders/{id}/cancel:
    delete:
      summary: Cancel an order
      description: User to cancel an existing order.
      tags: [Order_Admin]
      security:
        - bearerAuth: []
      parameters:
        - $ref: '../components/schemas/core/parameters.yaml#/components/parameters/AuthorizationHeader'
        - $ref: '../components/schemas/core/parameters.yaml#/components/parameters/IdempotencyKeyHeader'
        - name: id
          in: path
          required: true
          description: ID of the order to cancel
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '../components/schemas/core/response.yaml'
                  - type: object
                    properties:
                      data:
                        $ref: '../components/schemas/order/order_status.yaml'
        '400':
          $ref: '../components/responses/error.yaml#/BadRequest'
        '404':
          $ref: '../components/responses/error.yaml#/NotFound'
        '403':
          $ref: '../components/responses/error.yaml#/Forbidden'
