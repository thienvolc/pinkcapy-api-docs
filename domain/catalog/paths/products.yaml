parameters:
  ProductId:
    name: id
    in: path
    required: true
    description: ID of the product
    schema:
      type: integer
      example: 1

paths:
  /products/{id}:
    get:
      summary: Get product
      description: Retrieve a product by its ID.
      tags: [Product_Public]
      parameters:
        - $ref: '#/parameters/ProductId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '../../../openapi.yaml#/components/schemas/ResponseBase'
                  - type: object
                    properties:
                      data:
                        $ref: '../schemas/product.yaml#/schemas/ProductPublic'
        '404':
          $ref: '../../../openapi.yaml#/components/responses/NotFound'

  /products:
    get:
      summary: Search products
      description: Retrieve a list of products based on search criteria.
      tags: [Product_Public]
      parameters:
        - $ref: '../../../openapi.yaml#/components/parameters/OffsetParam'
        - $ref: '../../../openapi.yaml#/components/parameters/LimitParam'
        - $ref: '../../../openapi.yaml#/components/parameters/SortParam'
        - name: query
          in: query
          description: Search keyword
          schema:
            type: string
            example: 'tai nghe'
        - name: category
          in: query
          description: Category ID of the products
          schema:
            type: integer
            example: 3
        - name: price_min
          in: query
          description: Minimum price of the products
          schema:
            type: integer
            example: 100000
        - name: price_max
          in: query
          description: Maximum price of the products
          schema:
            type: integer
            example: 500000
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '../../../openapi.yaml#/components/schemas/ResponseBase'
                  - type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '../../../openapi.yaml#/components/schemas/InfiniteScroll'
                          - type: object
                            properties:
                              data:
                                items:
                                  $ref: '../schemas/product.yaml#/schemas/ProductPublic'
